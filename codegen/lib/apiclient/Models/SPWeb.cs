// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Graph.Community.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class SPWeb : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The AssociatedMemberGroup property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Graph.Community.Models.SPGroup? AssociatedMemberGroup { get; set; }
#nullable restore
#else
        public global::Graph.Community.Models.SPGroup AssociatedMemberGroup { get; set; }
#endif
        /// <summary>The AssociatedOwnerGroup property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Graph.Community.Models.SPGroup? AssociatedOwnerGroup { get; set; }
#nullable restore
#else
        public global::Graph.Community.Models.SPGroup AssociatedOwnerGroup { get; set; }
#endif
        /// <summary>The AssociatedVisitorGroup property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Graph.Community.Models.SPGroup? AssociatedVisitorGroup { get; set; }
#nullable restore
#else
        public global::Graph.Community.Models.SPGroup AssociatedVisitorGroup { get; set; }
#endif
        /// <summary>The change token that is used when the next change is logged to the website.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Graph.Community.Models.ChangeToken? CurrentChangeToken { get; set; }
#nullable restore
#else
        public global::Graph.Community.Models.ChangeToken CurrentChangeToken { get; set; }
#endif
        /// <summary>The FooterEnabled property</summary>
        public bool? FooterEnabled { get; set; }
        /// <summary>Footer layout type:Simple = 0,Extended = 1,Stacked = 2</summary>
        public int? FooterLayout { get; set; }
        /// <summary>The site identifier for the site.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The RegionalSettings property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Graph.Community.Models.RegionalSettings? RegionalSettings { get; set; }
#nullable restore
#else
        public global::Graph.Community.Models.RegionalSettings RegionalSettings { get; set; }
#endif
        /// <summary>The SiteUsers property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Graph.Community.Models.SPUser>? SiteUsers { get; set; }
#nullable restore
#else
        public List<global::Graph.Community.Models.SPUser> SiteUsers { get; set; }
#endif
        /// <summary>The title for the website.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>The UserCustomActions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Graph.Community.Models.UserCustomAction>? UserCustomActions { get; set; }
#nullable restore
#else
        public List<global::Graph.Community.Models.UserCustomAction> UserCustomActions { get; set; }
#endif
        /// <summary>The name of the site definition or site template that was used to create the site.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WebTemplate { get; set; }
#nullable restore
#else
        public string WebTemplate { get; set; }
#endif
        /// <summary>The WelcomePage property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WelcomePage { get; set; }
#nullable restore
#else
        public string WelcomePage { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Graph.Community.Models.SPWeb"/> and sets the default values.
        /// </summary>
        public SPWeb()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Graph.Community.Models.SPWeb"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Graph.Community.Models.SPWeb CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Graph.Community.Models.SPWeb();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "AssociatedMemberGroup", n => { AssociatedMemberGroup = n.GetObjectValue<global::Graph.Community.Models.SPGroup>(global::Graph.Community.Models.SPGroup.CreateFromDiscriminatorValue); } },
                { "AssociatedOwnerGroup", n => { AssociatedOwnerGroup = n.GetObjectValue<global::Graph.Community.Models.SPGroup>(global::Graph.Community.Models.SPGroup.CreateFromDiscriminatorValue); } },
                { "AssociatedVisitorGroup", n => { AssociatedVisitorGroup = n.GetObjectValue<global::Graph.Community.Models.SPGroup>(global::Graph.Community.Models.SPGroup.CreateFromDiscriminatorValue); } },
                { "CurrentChangeToken", n => { CurrentChangeToken = n.GetObjectValue<global::Graph.Community.Models.ChangeToken>(global::Graph.Community.Models.ChangeToken.CreateFromDiscriminatorValue); } },
                { "FooterEnabled", n => { FooterEnabled = n.GetBoolValue(); } },
                { "FooterLayout", n => { FooterLayout = n.GetIntValue(); } },
                { "Id", n => { Id = n.GetStringValue(); } },
                { "RegionalSettings", n => { RegionalSettings = n.GetObjectValue<global::Graph.Community.Models.RegionalSettings>(global::Graph.Community.Models.RegionalSettings.CreateFromDiscriminatorValue); } },
                { "SiteUsers", n => { SiteUsers = n.GetCollectionOfObjectValues<global::Graph.Community.Models.SPUser>(global::Graph.Community.Models.SPUser.CreateFromDiscriminatorValue)?.AsList(); } },
                { "Title", n => { Title = n.GetStringValue(); } },
                { "UserCustomActions", n => { UserCustomActions = n.GetCollectionOfObjectValues<global::Graph.Community.Models.UserCustomAction>(global::Graph.Community.Models.UserCustomAction.CreateFromDiscriminatorValue)?.AsList(); } },
                { "WebTemplate", n => { WebTemplate = n.GetStringValue(); } },
                { "WelcomePage", n => { WelcomePage = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Graph.Community.Models.SPGroup>("AssociatedMemberGroup", AssociatedMemberGroup);
            writer.WriteObjectValue<global::Graph.Community.Models.SPGroup>("AssociatedOwnerGroup", AssociatedOwnerGroup);
            writer.WriteObjectValue<global::Graph.Community.Models.SPGroup>("AssociatedVisitorGroup", AssociatedVisitorGroup);
            writer.WriteObjectValue<global::Graph.Community.Models.ChangeToken>("CurrentChangeToken", CurrentChangeToken);
            writer.WriteBoolValue("FooterEnabled", FooterEnabled);
            writer.WriteIntValue("FooterLayout", FooterLayout);
            writer.WriteStringValue("Id", Id);
            writer.WriteObjectValue<global::Graph.Community.Models.RegionalSettings>("RegionalSettings", RegionalSettings);
            writer.WriteCollectionOfObjectValues<global::Graph.Community.Models.SPUser>("SiteUsers", SiteUsers);
            writer.WriteStringValue("Title", Title);
            writer.WriteCollectionOfObjectValues<global::Graph.Community.Models.UserCustomAction>("UserCustomActions", UserCustomActions);
            writer.WriteStringValue("WebTemplate", WebTemplate);
            writer.WriteStringValue("WelcomePage", WelcomePage);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
