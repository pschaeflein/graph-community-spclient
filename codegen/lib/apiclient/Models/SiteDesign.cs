// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Graph.Community.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class SiteDesign : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The DesignPackageId property</summary>
        public Guid? DesignPackageId { get; set; }
        /// <summary>The DesignType property</summary>
        public int? DesignType { get; set; }
        /// <summary>The IsOutOfBoxTemplate property</summary>
        public bool? IsOutOfBoxTemplate { get; set; }
        /// <summary>The IsTenantAdminOnly property</summary>
        public bool? IsTenantAdminOnly { get; set; }
        /// <summary>The ListColor property</summary>
        public int? ListColor { get; set; }
        /// <summary>The ListIcon property</summary>
        public int? ListIcon { get; set; }
        /// <summary>The Order property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Order { get; set; }
#nullable restore
#else
        public string Order { get; set; }
#endif
        /// <summary>The PreviewImageAltText property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PreviewImageAltText { get; set; }
#nullable restore
#else
        public string PreviewImageAltText { get; set; }
#endif
        /// <summary>The PreviewImageUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PreviewImageUrl { get; set; }
#nullable restore
#else
        public string PreviewImageUrl { get; set; }
#endif
        /// <summary>The RequiresGroupConnected property</summary>
        public bool? RequiresGroupConnected { get; set; }
        /// <summary>The RequiresTeamsConnected property</summary>
        public bool? RequiresTeamsConnected { get; set; }
        /// <summary>The RequiresYammerConnected property</summary>
        public bool? RequiresYammerConnected { get; set; }
        /// <summary>The SiteScriptIds property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? SiteScriptIds { get; set; }
#nullable restore
#else
        public List<string> SiteScriptIds { get; set; }
#endif
        /// <summary>The SupportedWebTemplates property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? SupportedWebTemplates { get; set; }
#nullable restore
#else
        public List<string> SupportedWebTemplates { get; set; }
#endif
        /// <summary>The TemplateFeatures property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? TemplateFeatures { get; set; }
#nullable restore
#else
        public List<string> TemplateFeatures { get; set; }
#endif
        /// <summary>The ThumbnailUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ThumbnailUrl { get; set; }
#nullable restore
#else
        public string ThumbnailUrl { get; set; }
#endif
        /// <summary>The Title property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>The WebTemplate property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WebTemplate { get; set; }
#nullable restore
#else
        public string WebTemplate { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Graph.Community.Models.SiteDesign"/> and sets the default values.
        /// </summary>
        public SiteDesign()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Graph.Community.Models.SiteDesign"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Graph.Community.Models.SiteDesign CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Graph.Community.Models.SiteDesign();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "DesignPackageId", n => { DesignPackageId = n.GetGuidValue(); } },
                { "DesignType", n => { DesignType = n.GetIntValue(); } },
                { "IsOutOfBoxTemplate", n => { IsOutOfBoxTemplate = n.GetBoolValue(); } },
                { "IsTenantAdminOnly", n => { IsTenantAdminOnly = n.GetBoolValue(); } },
                { "ListColor", n => { ListColor = n.GetIntValue(); } },
                { "ListIcon", n => { ListIcon = n.GetIntValue(); } },
                { "Order", n => { Order = n.GetStringValue(); } },
                { "PreviewImageAltText", n => { PreviewImageAltText = n.GetStringValue(); } },
                { "PreviewImageUrl", n => { PreviewImageUrl = n.GetStringValue(); } },
                { "RequiresGroupConnected", n => { RequiresGroupConnected = n.GetBoolValue(); } },
                { "RequiresTeamsConnected", n => { RequiresTeamsConnected = n.GetBoolValue(); } },
                { "RequiresYammerConnected", n => { RequiresYammerConnected = n.GetBoolValue(); } },
                { "SiteScriptIds", n => { SiteScriptIds = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "SupportedWebTemplates", n => { SupportedWebTemplates = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "TemplateFeatures", n => { TemplateFeatures = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "ThumbnailUrl", n => { ThumbnailUrl = n.GetStringValue(); } },
                { "Title", n => { Title = n.GetStringValue(); } },
                { "WebTemplate", n => { WebTemplate = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteGuidValue("DesignPackageId", DesignPackageId);
            writer.WriteIntValue("DesignType", DesignType);
            writer.WriteBoolValue("IsOutOfBoxTemplate", IsOutOfBoxTemplate);
            writer.WriteBoolValue("IsTenantAdminOnly", IsTenantAdminOnly);
            writer.WriteIntValue("ListColor", ListColor);
            writer.WriteIntValue("ListIcon", ListIcon);
            writer.WriteStringValue("Order", Order);
            writer.WriteStringValue("PreviewImageAltText", PreviewImageAltText);
            writer.WriteStringValue("PreviewImageUrl", PreviewImageUrl);
            writer.WriteBoolValue("RequiresGroupConnected", RequiresGroupConnected);
            writer.WriteBoolValue("RequiresTeamsConnected", RequiresTeamsConnected);
            writer.WriteBoolValue("RequiresYammerConnected", RequiresYammerConnected);
            writer.WriteCollectionOfPrimitiveValues<string>("SiteScriptIds", SiteScriptIds);
            writer.WriteCollectionOfPrimitiveValues<string>("SupportedWebTemplates", SupportedWebTemplates);
            writer.WriteCollectionOfPrimitiveValues<string>("TemplateFeatures", TemplateFeatures);
            writer.WriteStringValue("ThumbnailUrl", ThumbnailUrl);
            writer.WriteStringValue("Title", Title);
            writer.WriteStringValue("WebTemplate", WebTemplate);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
