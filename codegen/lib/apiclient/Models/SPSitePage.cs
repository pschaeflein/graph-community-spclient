// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Graph.Community.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class SPSitePage : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The AbsoluteUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AbsoluteUrl { get; set; }
#nullable restore
#else
        public string AbsoluteUrl { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The BannerImageUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BannerImageUrl { get; set; }
#nullable restore
#else
        public string BannerImageUrl { get; set; }
#endif
        /// <summary>The BannerThumbnailUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BannerThumbnailUrl { get; set; }
#nullable restore
#else
        public string BannerThumbnailUrl { get; set; }
#endif
        /// <summary>The ContentTypeId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ContentTypeId { get; set; }
#nullable restore
#else
        public string ContentTypeId { get; set; }
#endif
        /// <summary>Created by user information.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Graph.Community.Models.PublishingUserInfo? CreatedBy { get; set; }
#nullable restore
#else
        public global::Graph.Community.Models.PublishingUserInfo CreatedBy { get; set; }
#endif
        /// <summary>The Description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The FileName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FileName { get; set; }
#nullable restore
#else
        public string FileName { get; set; }
#endif
        /// <summary>The FirstPublished property</summary>
        public DateTimeOffset? FirstPublished { get; set; }
        /// <summary>The Id property</summary>
        public int? Id { get; set; }
        /// <summary>The IsWebWelcomePage property</summary>
        public bool? IsWebWelcomePage { get; set; }
        /// <summary>Last modified by user information.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Graph.Community.Models.PublishingUserInfo? LastModifiedBy { get; set; }
#nullable restore
#else
        public global::Graph.Community.Models.PublishingUserInfo LastModifiedBy { get; set; }
#endif
        /// <summary>The Modified property</summary>
        public DateTimeOffset? Modified { get; set; }
        /// <summary>The PageLayoutType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PageLayoutType { get; set; }
#nullable restore
#else
        public string PageLayoutType { get; set; }
#endif
        /// <summary>Promoted state:NotPromoted = 0,PromoteOnPublish = 1,Promoted = 2</summary>
        public int? PromotedState { get; set; }
        /// <summary>The Title property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>The UniqueId property</summary>
        public Guid? UniqueId { get; set; }
        /// <summary>Site-relative Url</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; set; }
#nullable restore
#else
        public string Url { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Graph.Community.Models.SPSitePage"/> and sets the default values.
        /// </summary>
        public SPSitePage()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Graph.Community.Models.SPSitePage"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Graph.Community.Models.SPSitePage CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Graph.Community.Models.SPSitePage();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "AbsoluteUrl", n => { AbsoluteUrl = n.GetStringValue(); } },
                { "BannerImageUrl", n => { BannerImageUrl = n.GetStringValue(); } },
                { "BannerThumbnailUrl", n => { BannerThumbnailUrl = n.GetStringValue(); } },
                { "ContentTypeId", n => { ContentTypeId = n.GetStringValue(); } },
                { "CreatedBy", n => { CreatedBy = n.GetObjectValue<global::Graph.Community.Models.PublishingUserInfo>(global::Graph.Community.Models.PublishingUserInfo.CreateFromDiscriminatorValue); } },
                { "Description", n => { Description = n.GetStringValue(); } },
                { "FileName", n => { FileName = n.GetStringValue(); } },
                { "FirstPublished", n => { FirstPublished = n.GetDateTimeOffsetValue(); } },
                { "Id", n => { Id = n.GetIntValue(); } },
                { "IsWebWelcomePage", n => { IsWebWelcomePage = n.GetBoolValue(); } },
                { "LastModifiedBy", n => { LastModifiedBy = n.GetObjectValue<global::Graph.Community.Models.PublishingUserInfo>(global::Graph.Community.Models.PublishingUserInfo.CreateFromDiscriminatorValue); } },
                { "Modified", n => { Modified = n.GetDateTimeOffsetValue(); } },
                { "PageLayoutType", n => { PageLayoutType = n.GetStringValue(); } },
                { "PromotedState", n => { PromotedState = n.GetIntValue(); } },
                { "Title", n => { Title = n.GetStringValue(); } },
                { "UniqueId", n => { UniqueId = n.GetGuidValue(); } },
                { "Url", n => { Url = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("AbsoluteUrl", AbsoluteUrl);
            writer.WriteStringValue("BannerImageUrl", BannerImageUrl);
            writer.WriteStringValue("BannerThumbnailUrl", BannerThumbnailUrl);
            writer.WriteStringValue("ContentTypeId", ContentTypeId);
            writer.WriteObjectValue<global::Graph.Community.Models.PublishingUserInfo>("CreatedBy", CreatedBy);
            writer.WriteStringValue("Description", Description);
            writer.WriteStringValue("FileName", FileName);
            writer.WriteDateTimeOffsetValue("FirstPublished", FirstPublished);
            writer.WriteIntValue("Id", Id);
            writer.WriteBoolValue("IsWebWelcomePage", IsWebWelcomePage);
            writer.WriteObjectValue<global::Graph.Community.Models.PublishingUserInfo>("LastModifiedBy", LastModifiedBy);
            writer.WriteDateTimeOffsetValue("Modified", Modified);
            writer.WriteStringValue("PageLayoutType", PageLayoutType);
            writer.WriteIntValue("PromotedState", PromotedState);
            writer.WriteStringValue("Title", Title);
            writer.WriteGuidValue("UniqueId", UniqueId);
            writer.WriteStringValue("Url", Url);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
