// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Graph.Community.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class SPGroup : global::Graph.Community.Models.SPPrincipal, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Whether group members can modify membership in the group.</summary>
        public bool? AllowMembersEditMembership { get; set; }
        /// <summary>Whether to allow users to request membership in the group and to allow users to request to leave the group.</summary>
        public bool? AllowRequestToJoinLeave { get; set; }
        /// <summary>Whether users are automatically added or removed when they make a request.</summary>
        public bool? AutoAcceptRequestToJoinLeave { get; set; }
        /// <summary>Description for the group.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>Whether only group members are allowed to view the list of members in the group.</summary>
        public bool? OnlyAllowMembersViewMembership { get; set; }
        /// <summary>The owner for the group, which can be a user or another group.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Graph.Community.Models.SPPrincipal? Owner { get; set; }
#nullable restore
#else
        public global::Graph.Community.Models.SPPrincipal Owner { get; set; }
#endif
        /// <summary>The name for the owner of this group</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OwnerTitle { get; set; }
#nullable restore
#else
        public string OwnerTitle { get; set; }
#endif
        /// <summary>The e-mail address to which membership requests are sent.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RequestToJoinLeaveEmailSetting { get; set; }
#nullable restore
#else
        public string RequestToJoinLeaveEmailSetting { get; set; }
#endif
        /// <summary>The Users property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Graph.Community.Models.SPUser>? Users { get; set; }
#nullable restore
#else
        public List<global::Graph.Community.Models.SPUser> Users { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Graph.Community.Models.SPGroup"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Graph.Community.Models.SPGroup CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Graph.Community.Models.SPGroup();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "AllowMembersEditMembership", n => { AllowMembersEditMembership = n.GetBoolValue(); } },
                { "AllowRequestToJoinLeave", n => { AllowRequestToJoinLeave = n.GetBoolValue(); } },
                { "AutoAcceptRequestToJoinLeave", n => { AutoAcceptRequestToJoinLeave = n.GetBoolValue(); } },
                { "Description", n => { Description = n.GetStringValue(); } },
                { "OnlyAllowMembersViewMembership", n => { OnlyAllowMembersViewMembership = n.GetBoolValue(); } },
                { "Owner", n => { Owner = n.GetObjectValue<global::Graph.Community.Models.SPPrincipal>(global::Graph.Community.Models.SPPrincipal.CreateFromDiscriminatorValue); } },
                { "OwnerTitle", n => { OwnerTitle = n.GetStringValue(); } },
                { "RequestToJoinLeaveEmailSetting", n => { RequestToJoinLeaveEmailSetting = n.GetStringValue(); } },
                { "Users", n => { Users = n.GetCollectionOfObjectValues<global::Graph.Community.Models.SPUser>(global::Graph.Community.Models.SPUser.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteBoolValue("AllowMembersEditMembership", AllowMembersEditMembership);
            writer.WriteBoolValue("AllowRequestToJoinLeave", AllowRequestToJoinLeave);
            writer.WriteBoolValue("AutoAcceptRequestToJoinLeave", AutoAcceptRequestToJoinLeave);
            writer.WriteStringValue("Description", Description);
            writer.WriteBoolValue("OnlyAllowMembersViewMembership", OnlyAllowMembersViewMembership);
            writer.WriteObjectValue<global::Graph.Community.Models.SPPrincipal>("Owner", Owner);
            writer.WriteStringValue("OwnerTitle", OwnerTitle);
            writer.WriteStringValue("RequestToJoinLeaveEmailSetting", RequestToJoinLeaveEmailSetting);
            writer.WriteCollectionOfObjectValues<global::Graph.Community.Models.SPUser>("Users", Users);
        }
    }
}
#pragma warning restore CS0618
