// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Graph.Community.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class SiteDesignRun : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The SiteDesignID property</summary>
        public Guid? SiteDesignID { get; set; }
        /// <summary>The SiteDesignTitle property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SiteDesignTitle { get; set; }
#nullable restore
#else
        public string SiteDesignTitle { get; set; }
#endif
        /// <summary>The SiteDesignVersion property</summary>
        public int? SiteDesignVersion { get; set; }
        /// <summary>The SiteID property</summary>
        public Guid? SiteID { get; set; }
        /// <summary>Appears to be the Unix Epoch timestamp</summary>
        public long? StartTime { get; set; }
        /// <summary>The WebID property</summary>
        public Guid? WebID { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Graph.Community.Models.SiteDesignRun"/> and sets the default values.
        /// </summary>
        public SiteDesignRun()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Graph.Community.Models.SiteDesignRun"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Graph.Community.Models.SiteDesignRun CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Graph.Community.Models.SiteDesignRun();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "SiteDesignID", n => { SiteDesignID = n.GetGuidValue(); } },
                { "SiteDesignTitle", n => { SiteDesignTitle = n.GetStringValue(); } },
                { "SiteDesignVersion", n => { SiteDesignVersion = n.GetIntValue(); } },
                { "SiteID", n => { SiteID = n.GetGuidValue(); } },
                { "StartTime", n => { StartTime = n.GetLongValue(); } },
                { "WebID", n => { WebID = n.GetGuidValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteGuidValue("SiteDesignID", SiteDesignID);
            writer.WriteStringValue("SiteDesignTitle", SiteDesignTitle);
            writer.WriteIntValue("SiteDesignVersion", SiteDesignVersion);
            writer.WriteGuidValue("SiteID", SiteID);
            writer.WriteLongValue("StartTime", StartTime);
            writer.WriteGuidValue("WebID", WebID);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
