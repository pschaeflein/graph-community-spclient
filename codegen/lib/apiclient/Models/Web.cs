// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Graph.Community.Models {
    public class Web : IAdditionalDataHolder, IParsable 
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The AssociatedMemberGroup property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Group? AssociatedMemberGroup { get; set; }
#nullable restore
#else
        public Group AssociatedMemberGroup { get; set; }
#endif
        /// <summary>The AssociatedMemberGroupNavigationLink property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AssociatedMemberGroupNavigationLink { get; set; }
#nullable restore
#else
        public string AssociatedMemberGroupNavigationLink { get; set; }
#endif
        /// <summary>The AssociatedOwnerGroup property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Group? AssociatedOwnerGroup { get; set; }
#nullable restore
#else
        public Group AssociatedOwnerGroup { get; set; }
#endif
        /// <summary>The AssociatedOwnerGroupNavigationLink property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AssociatedOwnerGroupNavigationLink { get; set; }
#nullable restore
#else
        public string AssociatedOwnerGroupNavigationLink { get; set; }
#endif
        /// <summary>The AssociatedVisitorGroup property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Group? AssociatedVisitorGroup { get; set; }
#nullable restore
#else
        public Group AssociatedVisitorGroup { get; set; }
#endif
        /// <summary>The AssociatedVisitorGroupNavigationLink property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AssociatedVisitorGroupNavigationLink { get; set; }
#nullable restore
#else
        public string AssociatedVisitorGroupNavigationLink { get; set; }
#endif
        /// <summary>The CurrentChangeToken property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ChangeToken? CurrentChangeToken { get; set; }
#nullable restore
#else
        public ChangeToken CurrentChangeToken { get; set; }
#endif
        /// <summary>The FooterEnabled property</summary>
        public bool? FooterEnabled { get; set; }
        /// <summary>The FooterLayout property</summary>
        public int? FooterLayout { get; set; }
        /// <summary>The Id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The RegionalSettings property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Graph.Community.Models.RegionalSettings? RegionalSettings { get; set; }
#nullable restore
#else
        public Graph.Community.Models.RegionalSettings RegionalSettings { get; set; }
#endif
        /// <summary>The Title property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>The UserCustomActions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<UserCustomAction>? UserCustomActions { get; set; }
#nullable restore
#else
        public List<UserCustomAction> UserCustomActions { get; set; }
#endif
        /// <summary>The Users property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<User>? Users { get; private set; }
#nullable restore
#else
        public List<User> Users { get; private set; }
#endif
        /// <summary>The UsersNavigationLink property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UsersNavigationLink { get; set; }
#nullable restore
#else
        public string UsersNavigationLink { get; set; }
#endif
        /// <summary>The WelcomePage property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WelcomePage { get; set; }
#nullable restore
#else
        public string WelcomePage { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="Web"/> and sets the default values.
        /// </summary>
        public Web()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="Web"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static Web CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Web();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                {"AssociatedMemberGroup", n => { AssociatedMemberGroup = n.GetObjectValue<Group>(Group.CreateFromDiscriminatorValue); } },
                {"AssociatedMemberGroupNavigationLink", n => { AssociatedMemberGroupNavigationLink = n.GetStringValue(); } },
                {"AssociatedOwnerGroup", n => { AssociatedOwnerGroup = n.GetObjectValue<Group>(Group.CreateFromDiscriminatorValue); } },
                {"AssociatedOwnerGroupNavigationLink", n => { AssociatedOwnerGroupNavigationLink = n.GetStringValue(); } },
                {"AssociatedVisitorGroup", n => { AssociatedVisitorGroup = n.GetObjectValue<Group>(Group.CreateFromDiscriminatorValue); } },
                {"AssociatedVisitorGroupNavigationLink", n => { AssociatedVisitorGroupNavigationLink = n.GetStringValue(); } },
                {"CurrentChangeToken", n => { CurrentChangeToken = n.GetObjectValue<ChangeToken>(ChangeToken.CreateFromDiscriminatorValue); } },
                {"FooterEnabled", n => { FooterEnabled = n.GetBoolValue(); } },
                {"FooterLayout", n => { FooterLayout = n.GetIntValue(); } },
                {"Id", n => { Id = n.GetStringValue(); } },
                {"RegionalSettings", n => { RegionalSettings = n.GetObjectValue<Graph.Community.Models.RegionalSettings>(Graph.Community.Models.RegionalSettings.CreateFromDiscriminatorValue); } },
                {"Title", n => { Title = n.GetStringValue(); } },
                {"UserCustomActions", n => { UserCustomActions = n.GetCollectionOfObjectValues<UserCustomAction>(UserCustomAction.CreateFromDiscriminatorValue)?.ToList(); } },
                {"Users", n => { Users = n.GetCollectionOfObjectValues<User>(User.CreateFromDiscriminatorValue)?.ToList(); } },
                {"UsersNavigationLink", n => { UsersNavigationLink = n.GetStringValue(); } },
                {"WelcomePage", n => { WelcomePage = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<Group>("AssociatedMemberGroup", AssociatedMemberGroup);
            writer.WriteStringValue("AssociatedMemberGroupNavigationLink", AssociatedMemberGroupNavigationLink);
            writer.WriteObjectValue<Group>("AssociatedOwnerGroup", AssociatedOwnerGroup);
            writer.WriteStringValue("AssociatedOwnerGroupNavigationLink", AssociatedOwnerGroupNavigationLink);
            writer.WriteObjectValue<Group>("AssociatedVisitorGroup", AssociatedVisitorGroup);
            writer.WriteStringValue("AssociatedVisitorGroupNavigationLink", AssociatedVisitorGroupNavigationLink);
            writer.WriteObjectValue<ChangeToken>("CurrentChangeToken", CurrentChangeToken);
            writer.WriteBoolValue("FooterEnabled", FooterEnabled);
            writer.WriteIntValue("FooterLayout", FooterLayout);
            writer.WriteStringValue("Id", Id);
            writer.WriteObjectValue<Graph.Community.Models.RegionalSettings>("RegionalSettings", RegionalSettings);
            writer.WriteStringValue("Title", Title);
            writer.WriteCollectionOfObjectValues<UserCustomAction>("UserCustomActions", UserCustomActions);
            writer.WriteStringValue("UsersNavigationLink", UsersNavigationLink);
            writer.WriteStringValue("WelcomePage", WelcomePage);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
