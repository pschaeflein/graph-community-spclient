// <auto-generated/>
#pragma warning disable CS0618
using Graph.Community.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Graph.Community.Item._api.Sitepages.PagesWithListItemId
{
    /// <summary>
    /// Builds and executes requests for operations under \{serverRelativeSiteUrl}\_api\sitepages\pages({listItemId})
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class PagesWithListItemIdRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Graph.Community.Item._api.Sitepages.PagesWithListItemId.PagesWithListItemIdRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="listItemId">The path parameter: listItemId</param>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public PagesWithListItemIdRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter, int? listItemId = default) : base(requestAdapter, "{+baseurl}/{serverRelativeSiteUrl}/_api/sitepages/pages({listItemId}){?%24select*,filter*}", pathParameters)
        {
            if (listItemId != null) PathParameters.Add("listItemId", listItemId);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Graph.Community.Item._api.Sitepages.PagesWithListItemId.PagesWithListItemIdRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public PagesWithListItemIdRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/{serverRelativeSiteUrl}/_api/sitepages/pages({listItemId}){?%24select*,filter*}", rawUrl)
        {
        }
        /// <returns>A List&lt;global::Graph.Community.Models.SitePage&gt;</returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<List<global::Graph.Community.Models.SitePage>?> GetAsync(Action<RequestConfiguration<global::Graph.Community.Item._api.Sitepages.PagesWithListItemId.PagesWithListItemIdRequestBuilder.PagesWithListItemIdRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<List<global::Graph.Community.Models.SitePage>> GetAsync(Action<RequestConfiguration<global::Graph.Community.Item._api.Sitepages.PagesWithListItemId.PagesWithListItemIdRequestBuilder.PagesWithListItemIdRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var collectionResult = await RequestAdapter.SendCollectionAsync<global::Graph.Community.Models.SitePage>(requestInfo, global::Graph.Community.Models.SitePage.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
            return collectionResult?.AsList();
        }
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Graph.Community.Item._api.Sitepages.PagesWithListItemId.PagesWithListItemIdRequestBuilder.PagesWithListItemIdRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Graph.Community.Item._api.Sitepages.PagesWithListItemId.PagesWithListItemIdRequestBuilder.PagesWithListItemIdRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json;odata.metadata=minimal");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Graph.Community.Item._api.Sitepages.PagesWithListItemId.PagesWithListItemIdRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Graph.Community.Item._api.Sitepages.PagesWithListItemId.PagesWithListItemIdRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Graph.Community.Item._api.Sitepages.PagesWithListItemId.PagesWithListItemIdRequestBuilder(rawUrl, RequestAdapter);
        }
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        #pragma warning disable CS1591
        public partial class PagesWithListItemIdRequestBuilderGetQueryParameters 
        #pragma warning restore CS1591
        {
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filter")]
            public string[]? Filter { get; set; }
#nullable restore
#else
            [QueryParameter("filter")]
            public string[] Filter { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("%24select")]
            public string[]? Select { get; set; }
#nullable restore
#else
            [QueryParameter("%24select")]
            public string[] Select { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class PagesWithListItemIdRequestBuilderGetRequestConfiguration : RequestConfiguration<global::Graph.Community.Item._api.Sitepages.PagesWithListItemId.PagesWithListItemIdRequestBuilder.PagesWithListItemIdRequestBuilderGetQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
